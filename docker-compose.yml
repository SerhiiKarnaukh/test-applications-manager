services:
  app:
    container_name: portfolio
    build:
      context: .
      args:
        - --rm
    command: >
      sh -c "python manage.py wait_for_db &&
            python manage.py migrate &&
            if [ \"$APP_LOCAL_SERVER\" = \"uvicorn\" ]; then
              uvicorn portfolio.asgi:application --host 0.0.0.0 --port 8000 --workers 4 --log-level debug --reload;
            else
              python manage.py runserver 0.0.0.0:8000;
            fi"
    ports:
      - 8000:8000
    volumes:
      - .:/app
      - ./data/web:/vol/web
    environment:
      - APP_LOCAL_SERVER=${APP_LOCAL_SERVER}
      - SECRET_KEY=${SECRET_KEY}
      - DEBUG=True
      - SQL_ENGINE=${SQL_ENGINE}
      - SQL_HOST=db
      - SQL_DATABASE=${SQL_DATABASE}
      - SQL_USER=${SQL_USER}
      - SQL_PASSWORD=${SQL_PASSWORD}
      - DJANGO_ALLOWED_HOSTS=${DJANGO_ALLOWED_HOSTS}
      - CORS_ALLOWED_ORIGINS=${CORS_ALLOWED_ORIGINS}
      - EMAIL_HOST=${EMAIL_HOST}
      - EMAIL_PORT=587
      - EMAIL_HOST_USER=${EMAIL_HOST_USER}
      - EMAIL_HOST_PASSWORD=${EMAIL_HOST_PASSWORD}
      - EMAIL_USE_TLS=${EMAIL_USE_TLS}
      - PAYPAL_RECEIVER_EMAIL=${PAYPAL_RECEIVER_EMAIL}
      - PAYPAL_TEST=${PAYPAL_TEST}
      - STRIPE_PUBLIC_KEY=${STRIPE_PUBLIC_KEY}
      - STRIPE_PRIVATE_KEY=${STRIPE_PRIVATE_KEY}
      - STRIPE_WEBHOOK_SECRET=${STRIPE_WEBHOOK_SECRET}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - ALPHA_VANTAGE_API_KEY=${ALPHA_VANTAGE_API_KEY}
    depends_on:
      - db
      - redis
  db:
    image: postgres:15-alpine
    container_name: portfolio-db
    volumes:
      - portfolio-postgres-data:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=${SQL_DATABASE}
      - POSTGRES_USER=${SQL_USER}
      - POSTGRES_PASSWORD=${SQL_PASSWORD}

  redis:
    restart: always
    image: redis:7.0.11-alpine
    ports:
      - '6379:6379'
    volumes:
      - redisdata:/data

  flower:
    image: mher/flower
    restart: always
    ports:
      - 5555:5555
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/0

  celery:
    container_name: celery
    restart: always
    build: .
    command: celery -A portfolio worker -l info
    volumes:
      - .:/app
      - ./data/web:/vol/web
    environment:
      - SECRET_KEY=${SECRET_KEY}
      - DEBUG=True
      - DJANGO_ALLOWED_HOSTS=${DJANGO_ALLOWED_HOSTS}
      - SQL_ENGINE=${SQL_ENGINE}
      - SQL_HOST=db
      - SQL_DATABASE=${SQL_DATABASE}
      - SQL_USER=${SQL_USER}
      - SQL_PASSWORD=${SQL_PASSWORD}
      - EMAIL_HOST=${EMAIL_HOST}
      - EMAIL_PORT=587
      - EMAIL_HOST_USER=${EMAIL_HOST_USER}
      - EMAIL_HOST_PASSWORD=${EMAIL_HOST_PASSWORD}
      - EMAIL_USE_TLS=${EMAIL_USE_TLS}
      - PAYPAL_RECEIVER_EMAIL=${PAYPAL_RECEIVER_EMAIL}
      - PAYPAL_TEST=${PAYPAL_TEST}
      - STRIPE_PUBLIC_KEY=${STRIPE_PUBLIC_KEY}
      - STRIPE_PRIVATE_KEY=${STRIPE_PRIVATE_KEY}
      - STRIPE_WEBHOOK_SECRET=${STRIPE_WEBHOOK_SECRET}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
    depends_on:
      - redis

  celery-beat:
    container_name: celery-beat
    restart: always
    build: .
    command: celery -A portfolio beat -l info
    volumes:
      - .:/app
    environment:
      - SECRET_KEY=${SECRET_KEY}
      - DEBUG=True
      - DJANGO_ALLOWED_HOSTS=${DJANGO_ALLOWED_HOSTS}
      - SQL_ENGINE=${SQL_ENGINE}
      - SQL_HOST=db
      - SQL_DATABASE=${SQL_DATABASE}
      - SQL_USER=${SQL_USER}
      - SQL_PASSWORD=${SQL_PASSWORD}
    depends_on:
      - redis

volumes:
  portfolio-postgres-data:
  redisdata:
